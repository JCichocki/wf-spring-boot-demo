apiVersion: apps/v1
kind: Deployment
metadata:
  name: sb-demo
  labels:
    app: sb-demo
    app.kubernetes.io/name: sb-demo
    app.kubernetes.io/component: backend
    app.kubernetes.io/part-of: sb-demo-platform
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: sb-demo
  template:
    metadata:
      labels:
        app: sb-demo
        app.kubernetes.io/name: sb-demo
        app.kubernetes.io/component: backend
        app.kubernetes.io/part-of: sb-demo-platform
        app.kubernetes.io/version: "1.0.0"
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      serviceAccountName: sb-demo
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
        - name: sb-demo
          image: sb-demo:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: SERVER_PORT
              value: "8080"
            - name: JAVA_OPTS
              valueFrom:
                configMapKeyRef:
                  name: sb-demo-config
                  key: java-opts
            - name: JDBC_DATABASE_URL
              valueFrom:
                configMapKeyRef:
                  name: sb-demo-config
                  key: database-url
            - name: JDBC_DATABASE_USERNAME
              valueFrom:
                secretKeyRef:
                  name: sb-demo-secrets
                  key: database-username
                  optional: true
            - name: JDBC_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sb-demo-secrets
                  key: database-password
                  optional: true
          envFrom:
            - configMapRef:
                name: sb-demo-config
                optional: true
          volumeMounts:
            - name: upload-storage
              mountPath: /app/uploads
            - name: temp-dir
              mountPath: /tmp
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /actuator/health
              port: http
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 12
            successThreshold: 1
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
              ephemeral-storage: "1Gi"
            limits:
              memory: "1Gi"
              cpu: "1000m"
              ephemeral-storage: "2Gi"
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1001
            runAsGroup: 1001
            capabilities:
              drop:
                - ALL
      volumes:
        - name: upload-storage
          persistentVolumeClaim:
            claimName: sb-demo-uploads
        - name: temp-dir
          emptyDir:
            sizeLimit: "1Gi"
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - sb-demo
                topologyKey: kubernetes.io/hostname