apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: maven-test
  labels:
    app.kubernetes.io/version: "0.4"
  annotations:
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/categories: Test
    tekton.dev/tags: test
    tekton.dev/displayName: "maven test"
    tekton.dev/platforms: "linux/amd64"
spec:
  description: >-
    This Task can be used to run Maven tests and generate test reports.
  workspaces:
    - name: source
      description: The workspace consisting of maven project.
    - name: maven-settings
      description: >-
        The workspace consisting of the custom maven settings
        provided by the user.
      optional: true
    - name: maven-local-repo
      description: >-
        The workspace for maven local repository cache
      optional: true
  params:
    - name: MAVEN_IMAGE
      type: string
      description: Maven base image
      default: registry.access.redhat.com/ubi8/openjdk-17:1.20
    - name: GOALS
      description: maven goals to run for testing
      type: array
      default:
        - "test"
    - name: MAVEN_MIRROR_URL
      description: The Maven repository mirror url
      type: string
      default: ""
    - name: SERVER_USER
      description: The username for the server
      type: string
      default: ""
    - name: SERVER_PASSWORD
      description: The password for the server
      type: string
      default: ""
    - name: PROXY_USER
      description: The username for the proxy server
      type: string
      default: ""
    - name: PROXY_PASSWORD
      description: The password for the proxy server
      type: string
      default: ""
    - name: PROXY_PORT
      description: Port number for the proxy server
      type: string
      default: ""
    - name: PROXY_HOST
      description: Proxy server Host
      type: string
      default: ""
    - name: PROXY_NON_PROXY_HOSTS
      description: Non proxy server host
      type: string
      default: ""
    - name: PROXY_PROTOCOL
      description: Protocol for the proxy ie http or https
      type: string
      default: "http"
    - name: CONTEXT_DIR
      type: string
      description: >-
        The context directory within the repository for sources on
        which we want to execute maven goals.
      default: "."
  results:
    - name: test-results
      description: The test results summary
  steps:
    - name: mvn-settings
      image: registry.access.redhat.com/ubi8/ubi-minimal:8.10
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        [[ -f $(workspaces.maven-settings.path)/settings.xml ]] && \
        echo 'using existing $(workspaces.maven-settings.path)/settings.xml' && exit 0
        
        if [[ -n "$(params.MAVEN_MIRROR_URL)" ]]; then
          cat > $(workspaces.maven-settings.path)/settings.xml <<EOF
        <?xml version="1.0" encoding="UTF-8"?>
        <settings>
          <mirrors>
            <mirror>
              <id>mirror.default</id>
              <url>$(params.MAVEN_MIRROR_URL)</url>
              <mirrorOf>central</mirrorOf>
            </mirror>
          </mirrors>
        </settings>
        EOF
        fi
        
        if [[ -n "$(params.SERVER_USER)" && -n "$(params.SERVER_PASSWORD)" ]]; then
          xml="""<server>
           <id>serverid</id>
           <username>$(params.SERVER_USER)</username>
           <password>$(params.SERVER_PASSWORD)</password>
         </server>"""
         sed -i "/<servers>/a $xml" $(workspaces.maven-settings.path)/settings.xml
        fi
        
        if [[ -n "$(params.PROXY_USER)" && -n "$(params.PROXY_PASSWORD)" ]] && [[ -n "$(params.PROXY_HOST)" && -n "$(params.PROXY_PORT)" ]]; then
          xml="""<proxy>
           <id>genproxy</id>
           <active>true</active>
           <protocol>$(params.PROXY_PROTOCOL)</protocol>
           <host>$(params.PROXY_HOST)</host>
           <port>$(params.PROXY_PORT)</port>
           <username>$(params.PROXY_USER)</username>
           <password>$(params.PROXY_PASSWORD)</password>
           <nonProxyHosts>$(params.PROXY_NON_PROXY_HOSTS)</nonProxyHosts>
         </proxy>"""
         sed -i "/<proxies>/a $xml" $(workspaces.maven-settings.path)/settings.xml
        fi
        
        [[ -f $(workspaces.maven-settings.path)/settings.xml ]] && cat $(workspaces.maven-settings.path)/settings.xml
        [[ -f $(workspaces.maven-settings.path)/settings.xml ]] || echo skipping settings
    - name: mvn-test
      image: $(params.MAVEN_IMAGE)
      workingDir: $(workspaces.source.path)/$(params.CONTEXT_DIR)
      script: |
        #!/usr/bin/env bash
        set -e
        
        # Set up Maven local repository if workspace is provided
        if [ "$(workspaces.maven-local-repo.bound)" = "true" ]; then
          MAVEN_LOCAL_REPO="-Dmaven.repo.local=$(workspaces.maven-local-repo.path)"
        else
          MAVEN_LOCAL_REPO=""
        fi
        
        # Set up Maven settings if workspace is provided
        if [ "$(workspaces.maven-settings.bound)" = "true" ] && [ -f "$(workspaces.maven-settings.path)/settings.xml" ]; then
          MAVEN_SETTINGS="-s $(workspaces.maven-settings.path)/settings.xml"
        else
          MAVEN_SETTINGS=""
        fi
        
        # Ensure we use the wrapper if it exists
        if [ -f "./mvnw" ]; then
          MAVEN_CMD="./mvnw"
        else
          MAVEN_CMD="mvn"
        fi
        
        echo "Running Maven test command:"
        echo "$MAVEN_CMD $(params.GOALS[*]) $MAVEN_SETTINGS $MAVEN_LOCAL_REPO"
        
        # Run tests and capture results
        $MAVEN_CMD $(params.GOALS[*]) $MAVEN_SETTINGS $MAVEN_LOCAL_REPO
        
        # Check if surefire reports exist and summarize results
        if [ -d "target/surefire-reports" ]; then
          TOTAL_TESTS=$(find target/surefire-reports -name "TEST-*.xml" -exec grep -h "tests=" {} \; | sed 's/.*tests="\([0-9]*\)".*/\1/' | awk '{sum += $1} END {print sum}')
          FAILED_TESTS=$(find target/surefire-reports -name "TEST-*.xml" -exec grep -h "failures=" {} \; | sed 's/.*failures="\([0-9]*\)".*/\1/' | awk '{sum += $1} END {print sum}')
          SKIPPED_TESTS=$(find target/surefire-reports -name "TEST-*.xml" -exec grep -h "skipped=" {} \; | sed 's/.*skipped="\([0-9]*\)".*/\1/' | awk '{sum += $1} END {print sum}')
          
          if [ -z "$TOTAL_TESTS" ]; then TOTAL_TESTS=0; fi
          if [ -z "$FAILED_TESTS" ]; then FAILED_TESTS=0; fi
          if [ -z "$SKIPPED_TESTS" ]; then SKIPPED_TESTS=0; fi
          
          PASSED_TESTS=$((TOTAL_TESTS - FAILED_TESTS - SKIPPED_TESTS))
          
          echo "Test Results: Total=$TOTAL_TESTS, Passed=$PASSED_TESTS, Failed=$FAILED_TESTS, Skipped=$SKIPPED_TESTS" | tee $(results.test-results.path)
          
          if [ "$FAILED_TESTS" -gt 0 ]; then
            echo "❌ Tests failed!"
            exit 1
          else
            echo "✅ All tests passed!"
          fi
        else
          echo "No test results found" | tee $(results.test-results.path)
        fi
      env:
        - name: HOME
          value: /tekton/home
        - name: MAVEN_OPTS
          value: "-XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Xms128m -Xmx1024m"